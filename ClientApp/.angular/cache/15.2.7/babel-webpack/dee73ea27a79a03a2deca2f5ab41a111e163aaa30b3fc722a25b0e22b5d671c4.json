{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/alertify.service\";\nexport class AuthGuard {\n  constructor(authService, router, alertify) {\n    this.authService = authService;\n    this.router = router;\n    this.alertify = alertify;\n  }\n  canActivate() {\n    if (this.authService.loggedIn()) {\n      return true;\n    }\n    this.alertify.error('You shall not pass!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n  canDeactivate() {\n    if (this.authService.loggedOut()) {\n      return true;\n    }\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AlertifyService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,SAAS;EACpBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,QAAyB;IAFzB,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,aAAQ,GAARC,QAAQ;EACd;EAEJC,WAAW;IACT,IAAI,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE,EAAE;MAC/B,OAAO,IAAI;;IAEb,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC,qBAAqB,CAAC;IAC1C,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,KAAK;EACd;EACAC,aAAa;IACX,IAAI,IAAI,CAACP,WAAW,CAACQ,SAAS,EAAE,EAAE;MAChC,OAAO,IAAI;;IAEb,IAAI,CAACP,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,KAAK;EAEd;;AAtBWR,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","authService","router","alertify","canActivate","loggedIn","error","navigate","canDeactivate","loggedOut","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\wtopm\\Documents\\GitHub\\WTOPMDb\\ClientApp\\src\\app\\_guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  canActivate(): boolean {\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    }\n    this.alertify.error('You shall not pass!');\n    this.router.navigate(['/home']);\n    return false;\n  }\n  canDeactivate(): boolean {\n    if (this.authService.loggedOut()) {\r\n      return true;\r\n    }\n    this.router.navigate(['/home']);\n    return false;\r\n\r\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}