{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../_services/alertify.service\";\nexport class LogoutGuard {\n  constructor(authService, router, alertify) {\n    this.authService = authService;\n    this.router = router;\n    this.alertify = alertify;\n  }\n  canActivate() {\n    if (!this.authService.loggedIn()) {\n      return true;\n    }\n    this.alertify.error('Logout first');\n    this.router.navigate(['/main']);\n    return false;\n  }\n}\nLogoutGuard.ɵfac = function LogoutGuard_Factory(t) {\n  return new (t || LogoutGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.AlertifyService));\n};\nLogoutGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LogoutGuard,\n  factory: LogoutGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;;AAQA,OAAM,MAAOA,WAAW;EACtBC,YACUC,WAAwB,EACxBC,MAAc,EACdC,QAAyB;IAFzB,gBAAW,GAAXF,WAAW;IACX,WAAM,GAANC,MAAM;IACN,aAAQ,GAARC,QAAQ;EACd;EAEJC,WAAW;IACT,IAAI,CAAC,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE,EAAE;MAChC,OAAO,IAAI;;IAEb,IAAI,CAACF,QAAQ,CAACG,KAAK,CAAC,cAAc,CAAC;IACnC,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,KAAK;EACd;;AAdWR,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFV;AAAM","names":["LogoutGuard","constructor","authService","router","alertify","canActivate","loggedIn","error","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\wtopm\\Documents\\GitHub\\WTOPMDb\\ClientApp\\src\\app\\_guards\\logout.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router} from '@angular/router';\nimport { AuthService } from '../_services/auth.service';\r\nimport { AlertifyService } from '../_services/alertify.service';\r\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogoutGuard implements CanActivate {\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private alertify: AlertifyService\n  ) { }\n\n  canActivate(): boolean {\n    if (!this.authService.loggedIn()) {\n      return true;\n    }\n    this.alertify.error('Logout first');\n    this.router.navigate(['/main']);\n    return false;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}